Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, 
you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting 
and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the 
dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet 
so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use 
Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 rows
ii. Business table = 10000 rows
iii. Category table = 10000 rows
iv. Checkin table = 10000 rows
v. elite_years table = 10000 rows
vi. friend table = 10000 rows
vii. hours table = 10000 rows
viii. photo table = 10000 rows
ix. review table = 10000 rows
x. tip table = 10000 rows
xi. user table = 10000 rows

-- found answer to this question with the following code:
-- Select *
-- From user -- i.e. where 'user' was the table of interest
-- Where user_id IS NULL -- i.e. 'user_id' is an example column which could have had no values and these would have been excluded from the total number of entries

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 unique entries (taken from primary key)
ii. Hours = 1562 unique entries (taken from primary key)
iii. Category = 2643 unique entries (taken from primary key)
iv. Attribute = 1115 unique entries (taken from primary key)
v. Review = 10000 unique entries (taken from primary key)
vi. Checkin =  493 unique entries (taken from primary key)
vii. Photo = 10000 unique entries (taken from primary key)
viii. Tip = 3979 unique entries (using business_id)
ix. User = 10000 unique entries (taken from primary key)
x. Friend = 11 unique entries (using user_id)
xi. Elite_years = 2780 unique entries (using user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No, there are no NULL values in any columns in the 'user' table

	SQL code used to arrive at answer:
	
	Select *
	From user
	Where
		id IS NULL OR
		name IS NULL OR 
		review_count IS NULL OR
		yelping_since IS NULL OR
		useful IS NULL OR
		funny IS NULL OR
		cool IS NULL OR
		fans IS NULL OR
		average_stars IS NULL OR
		compliment_hot IS NULL OR
		compliment_more IS NULL OR
		compliment_profile IS NULL OR
		compliment_cute IS NULL OR
		compliment_list IS NULL OR
		compliment_note IS NULL OR
		compliment_plain IS NULL OR
		compliment_cool IS NULL OR
		compliment_funny IS NULL OR
		compliment_writer IS NULL OR
		compliment_photos IS NULL

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
	
5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	Select
		city, 
		count(review_count) AS num_reviews --select the city and count the total number of reviews
	From 
		business -- from the business table
	Group by 
		city -- group all the reviews by the unique city
	Order by 
		num_reviews desc -- order the table by the number of reviews in descending order
	Copy and Paste the Result Below:
	
	+-----------------+-------------+
	| city            | num_reviews |
	+-----------------+-------------+
	| Las Vegas       |        1561 |
	| Phoenix         |        1001 |
	| Toronto         |         985 |
	| Scottsdale      |         497 |
	| Charlotte       |         468 |
	| Pittsburgh      |         353 |
	| Montréal        |         337 |
	| Mesa            |         304 |
	| Henderson       |         274 |
	| Tempe           |         261 |
	| Edinburgh       |         239 |
	| Chandler        |         232 |
	| Cleveland       |         189 |
	| Gilbert         |         188 |
	| Glendale        |         188 |
	| Madison         |         176 |
	| Mississauga     |         150 |
	| Stuttgart       |         141 |
	| Peoria          |         105 |
	| Markham         |          80 |
	| Champaign       |          71 |
	| North Las Vegas |          70 |
	| North York      |          64 |
	| Surprise        |          60 |
	| Richmond Hill   |          54 |
	+-----------------+-------------+
	(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
	Select 
		stars, 
		count(stars) as Rating_Count -- select the rating and counting the number of counts
	From 
		business -- from the 'business' table
	Where
		city LIKE 'Avon' -- filtering only on the city of 'Avon'
	Group by 
		stars -- grouping into unique star ratings

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------+--------------+
	| stars | Rating_Count |
	+-------+--------------+
	|   1.5 |            1 |
	|   2.5 |            2 |
	|   3.5 |            3 |
	|   4.0 |            2 |
	|   4.5 |            1 |
	|   5.0 |            1 |
	+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:
	Select 
		stars, -- select the rating and counting the number of counts
		count(stars) as Rating_Count
	From 
		business -- from the 'business' table
	Where
		city LIKE 'Beachwood' -- filtering only on the city of 'Avon'
	Group by 
		stars -- grouping into unique star ratings
Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
	+-------+--------------+
	| stars | Rating_Count |
	+-------+--------------+
	|   2.0 |            1 |
	|   2.5 |            1 |
	|   3.0 |            2 |
	|   3.5 |            2 |
	|   4.0 |            1 |
	|   4.5 |            2 |
	|   5.0 |            5 |
	+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	Select
		id,
		name,
		review_count -- select the user id, name and number of reviews (i.e. review_count)
	From 
		user -- from the 'user' table
	Order by
		review_count desc -- order the table in descending order of the total number of reviews
	Limit 3 -- limit so that only the top three results are returned

		
	Copy and Paste the Result Below:
	+------------------------+--------+--------------+
	| id                     | name   | review_count |
	+------------------------+--------+--------------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
	+------------------------+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Given the available mathematical operators in SQLite, it is difficult to be quantitative about the correlation between reviews and fans. Having said this, it is still possible to perform
	the analysis in a more qualitative fashion. 
	
	We can first look at the top 10 users based on the number of reviews using the following code:
	
	Select
		id,
		name,
		review_count, 
		fans -- select the user id, name, number of reviews (i.e. review_count) and number of fans
	From 
		user -- from the 'user' table
	Order by
		review_count desc -- order the table in descending order of the total number of reviews
	Limit 10 -- limit to just the top 10
	
	Which will yield the following results:
	
	+------------------------+-----------+--------------+------+
	| id                     | name      | review_count | fans |
	+------------------------+-----------+--------------+------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |   50 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
	| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
	| -gokwePdbXjfS0iF7NsUGA | eric      |         1116 |   16 |
	| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
	+------------------------+-----------+--------------+------+

	From these results, we can see that there is not a strong correlation between number of reviews and fans, as the number of fans for users is not following the same descending trend as the number of reviews, and in fact
	is even increasing between user Sara and Harald. 
	
	However, we can also look at the other end of the user base by sorting the users in ascending order, which will yield the following:
	
	+------------------------+---------------+--------------+------+
	| id                     | name          | review_count | fans |
	+------------------------+---------------+--------------+------+
	| -61V4ZkRsKUChYFZtdZDvQ | Sonnenschein1 |            0 |    0 |
	| -9TyYbKtEz-pxeZyLICOgA | svenher       |            0 |    0 |
	| -arJ-0bq2eycINnHrm0LFA | Schweinefe    |            0 |    0 |
	| -d8nnc-pp6qj_6qnp4IN-g | Luke          |            0 |    0 |
	| -Dhxu5B36bkm65ciME0vxg | Limon-Du      |            0 |    0 |
	| -G0sArycZyO_-AHlCPI4IQ | ab            |            0 |    0 |
	| -hQK8Yu-Be8tZu-5K3j6RA | torstenbec    |            0 |    0 |
	| -lfArh6lSfDddoa-KP5ZPQ | snek          |            0 |    0 |
	| -lyoqQ69K6RWsZHstAoQ1A |               |            0 |    0 |
	| --0sXNBv6IizZXuV-nl0Aw | Joe           |            1 |    0 |
	+------------------------+---------------+--------------+------+
	
	Here we can see that users with no reviews also have no fans. Therefore, we could say that there is a weak correlation between number of reviews and fans, however, it is difficult to be more quantitative without more
	in-depth statistical analysis.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	There are more reviews with the word "love" than with the word "hate" in them. 
	
	SQL code used to arrive at answer:
	
	Select id --select the unique review id
	From review --from the review table
	Where text Like '% hate %' -where the review contains the word "hate", used spaces either side so as to keep the word distinct
	
	--the same code was used for the second part but swapping out the search criteria "hate" for "love"
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	Select
		id,
		name,
		fans --select the user id, name and number of fans
	From
		user -- from the user table
	Order by
		fans desc --order them in descending order 
	Limit 10 -- limit to only the top 10
	
	Copy and Paste the Result Below:
	+------------------------+-----------+------+
	| id                     | name      | fans |
	+------------------------+-----------+------+
	| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
	| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
	+------------------------+-----------+------+

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
	Looking at 'Restaraunts' in Toronto
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	The low rated restaraunts are usually open from early the morning to late at night (i.e. 10:00 - 23:00) 
	The high rated restaraunts do not follow a strong pattern, some are open from afternoon to very late at night (i.e. 16:00-2:00) and others with similar hours to the low rated restaraunts (11:00 to 23:00)
	Therefore, there is no strong correlation between the hours open and the star rating of restaraunts in Toronto.

ii. Do the two groups you chose to analyze have a different number of reviews?
	Yes, the high rated restaraunts have on average 41.2 reviews each, whereas the low rated restaraunts have on average only 18 reviews each.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	Of the 10 restaruants available in the database in Toronto, there are 6 unique neighborhoods and 2 restaraunts without neighborhood data available (i.e. NULL).
	The high rated restaraunts are all located in different neighborhoods and with different postal codes, making it difficult to infer anything from the location data. 
	The low rated restaraunts have two in the same neighborhood, "Downtown Core", which may infer that you are more likely to find poor quality restaraunts in that area. 

SQL code used for analysis:
	Select
		name,
		neighborhood,
		postal_code,
		stars,
		category.category  -- select the relevant columns for the analysis
	From
	   business -- from the business table 
	   INNER JOIN category ON category.business_id = business.id -- and joining wit the category table
	Where
		business.city LIKE 'Toronto' AND
		category.category LIKE 'Restaurants' -- filtering the data only for Toronto and Restaraunts
	Order By
		stars DESC --ordering the restaraunts by the number of stars to discern the two groups
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
	The businesses that are open have on average 31 reviews, whereas the businesses which are closed on only have 23.  
         
ii. Difference 2:
	The two groups of businesses have a very similar average rating, with the open businesses having an average rating of 3.67 and the closed businesses 3.52.
         
SQL code used for analysis:

Select
    is_open,
    Count(id),
    Avg(review_count),
    Avg(stars)
From
   business
Group by
    is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: 
Parsing out keywords and business attributes for sentiment analysis, 
clustering businesses to find commonalities or anomalies between them, 
predicting the overall star rating for a business, 
predicting the number of fans a user will have, and so on. 
These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
	The analysis performed will be predicting the overall star rating of a business
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	This kind of analysis, predicting the star rating of businesses, will be mainly based upon the location geographically. Therefore, we will require the latitude and longitude as well as the name/id of the business.
	I think the latitude/longitude will be better to work with numerically as opposed to the postcode or street address. In addition, we can also see if there is any link with opening hours of the business and 
	the total number of reviews.
	
	Therefore, we will require the following attributes:
		business id,
		name,
		neighborhood, 
		stars,
		latitude,
		longitude,
		review_count,
		is_open
	
	The stars attribute will be used as a means to validate our model, comparing the predicted stars value against the actual star rating. Finally, the neighborhood attribute will be used for reporting purposes.
	The analysis will also only be on businesses which are currently open, therefore, we can filter using the 'is_open' attribute. The number of reviews should also be high enough to give confidence in the star rating, 
	therefore, the analysis will only be completed on businesses with more than 20 reviews.
                  
iii. Output of your finished dataset:
        +------------------------+--------------------------------------------+-------+----------+-----------+--------------+-----------------+
		| id                     | name                                       | stars | latitude | longitude | review_count | neighborhood    |
		+------------------------+--------------------------------------------+-------+----------+-----------+--------------+-----------------+
		| --6MefnULPED_I942VcFNA | John's Chinese BBQ Restaurant              |   3.0 |  43.8409 |  -79.3996 |           30 |                 |
		| --7zmmkVg-IMGaXbuVd0SQ | Primal Brewery                             |   4.0 |  35.4371 |  -80.8437 |           42 |                 |
		| --9e1ONYQuAa-CB_Rrw7Tw | Delmonico Steakhouse                       |   4.0 |  36.1232 |  -115.169 |         1389 | The Strip       |
		| --cjBEbXMI2obtaRHNSFrA | Howl at the Moon                           |   3.0 |  40.4439 |  -80.0002 |           44 | Downtown        |
		| --cZ6Hhc9F7VkKXxHMVZSQ | Pio Pio                                    |   4.0 |  35.1999 |  -80.8448 |          299 | Dilworth        |
		| --DaPTJW3-tB1vP-PfdTEg | Sunnyside Grill                            |   3.5 |  43.6778 |  -79.4447 |           37 | Corso Italia    |
		| --FBCX-N37CMYDfs790Bnw | The Bar At Bermuda & St. Rose              |   4.0 |  35.9787 |  -115.155 |          100 | Southeast       |
		| --I7YYLada0tSLkORTHb5Q | Happy Moose Bar and Grill                  |   3.5 |  41.2426 |  -81.3526 |           61 |                 |
		| --KQsXc-clkO7oHRqGzSzg | Sam's Club                                 |   3.0 |  33.6228 |  -111.895 |           26 |                 |
		| --qJNlGWyvPJfBrqwp9c0w | Bella Vista                                |   3.5 |  48.7254 |   9.19325 |           30 |                 |
		| --qvQS4MigHPykD2GV0-zw | Pearson Moving                             |   4.0 |  33.3562 |  -111.845 |           31 |                 |
		| --S62v0QgkqQaVUhFnNHrw | Denny's                                    |   2.0 |  41.5394 |  -81.4551 |           22 |                 |
		| --SrzpvFLwP_YFwB_Cetow | Keung Kee Restaurant                       |   3.5 |  43.8068 |  -79.2889 |           38 | Scarborough     |
		| --ttCFj_csKJhxnaMRNuiw | Impressions Dental                         |   3.0 |  33.2195 |  -111.807 |           32 |                 |
		| --ujyvoQlwVoBgMYtADiLA | Primanti Bros.                             |   3.5 |  40.3239 |  -79.9438 |           66 |                 |
		| -01XupAWZEXbdNbxNg5mEg | 18 Degrees Neighborhood Grill              |   3.0 |  33.6392 |  -111.882 |           72 |                 |
		| -06-Fdi30wJx-JA8P7CAng | China House                                |   3.5 |  41.4848 |  -81.9226 |           25 |                 |
		| -092wE7j5HZOogMLAh40zA | Wong's Jr                                  |   3.5 |   33.582 |  -112.237 |           83 |                 |
		| -0aIra_B6iALlfqAriBSYA | Tea2go                                     |   5.0 |  33.6755 |  -111.965 |           22 |                 |
		| -0BxAGlIk5DJAGVkpqBXxg | The Coffee Bean & Tea Leaf                 |   3.0 |  36.1221 |  -115.168 |           38 | The Strip       |
		| -0DET7VdEQOJVJ_v6klEug | Flaming Kitchen                            |   3.0 |  43.8484 |  -79.3487 |           25 | Brown's Corners |
		| -0dWjxaPKrXAn8urSnkSLA | Sandcastle Water Park                      |   3.0 |  40.3985 |  -79.9268 |           27 | Homestead       |
		| -0mm8pqBSIOYZQHeo8XnkA | Philthy Philly's                           |   4.0 |  44.0552 |  -79.4784 |           32 |                 |
		| -0NrB58jqKqJfuUCDupcsw | The Fry                                    |   3.5 |  43.7629 |  -79.4115 |           76 | Willowdale      |
		| -0qht1roIqleKiQkBLDkbw | Cancun Resort Las Vegas by Diamond Resorts |   3.0 |   36.038 |  -115.173 |          298 | Southeast       |
		+------------------------+--------------------------------------------+-------+----------+-----------+--------------+-----------------+
		(Output limit exceeded, 25 of 2433 total rows shown)
		
iv. Provide the SQL code you used to create your final dataset:

	Select --selecting the required business attributes for the analysis
		id,
		name,
		stars,
		latitude,
		longitude,
		review_count,
		neighborhood
	From
		business --from the business table
	Where
		is_open LIKE '1' AND
		review_count>20 --filtering based on the business being open and the review count being large enough